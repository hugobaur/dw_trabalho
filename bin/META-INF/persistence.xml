<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
		http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">

	<!-- Aqui temos toda a configuração de acesso ao banco. -->
	<!-- Lembrando, o banco deve ser criado manualmente no MySQL, para inserção dos dados. O nome do banco deve ser sistema_aeroporto_dw -->
	<persistence-unit name="sistema_aeroporto_dw">

		<!-- Implementação do JPA, no nosso caso Hibernate -->
		<provider>org.hibernate.ejb.HibernatePersistence</provider>

		<!-- Aqui são listadas todas as model -->
		<class>br.com.uff.model.Aviao</class>
		<class>br.com.uff.model.Classe</class>
		<class>br.com.uff.model.Poltrona</class>
		<class>br.com.uff.model.Usuario</class>
        <class>br.com.uff.model.Voo</class>
        <class>br.com.uff.model.Passageiro</class>
		<class>br.com.uff.model.Venda</class>

		<properties>
			<!-- Propriedades JDBC -->
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost/sistema_aeroporto_dw" />
			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.jdbc.password" value="1234" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			
			<!-- Gera a criação automática das colunas e tabelas no banco de dados. A tabela gerada terá o mesmo nome da entidade. -->
			<property name="hibernate.hbm2ddl.auto" value="update" />
			
			<!-- Aqui pedimos ao Hibernate para mostrar o SQL antes de executar. -->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
		</properties>
	</persistence-unit>
</persistence>

